import{_ as s,c as i,I as t,j as e,w as n,a,ay as c,E as r,o as d}from"./chunks/framework.DZK845Al.js";const V=JSON.parse('{"title":"事件","description":"","frontmatter":{"comment":false},"headers":[],"relativePath":"event/index.md","filePath":"event/index.md","lastUpdated":1721729057000}'),_={name:"event/index.md"},h=e("h1",{id:"事件",tabindex:"-1"},[a("事件 "),e("a",{class:"header-anchor",href:"#事件","aria-label":'Permalink to "事件"'},"​")],-1),u=c('<hr><h2 id="事件概述" tabindex="-1">事件概述 <a class="header-anchor" href="#事件概述" aria-label="Permalink to &quot;事件概述&quot;">​</a></h2><blockquote><p>事件是一段上报，上报也可以由插件主动触发<br> 例如插件向适配器发送请求，适配器返回结果时触发上报<br> 在大多数协议端中，事件上报基本上是通过 <code>HTTP</code>、<code>WebSocket</code>通信实现的<br> 而在karin，使用了<code>kritor</code>标准，新增了一种<code>gRPC</code>协议进行通信</p></blockquote><h2 id="消息事件" tabindex="-1">消息事件 <a class="header-anchor" href="#消息事件" aria-label="Permalink to &quot;消息事件&quot;">​</a></h2>',4),b=e("h2",{id:"通知事件",tabindex:"-1"},[a("通知事件 "),e("a",{class:"header-anchor",href:"#通知事件","aria-label":'Permalink to "通知事件"'},"​")],-1),f=e("h2",{id:"请求事件",tabindex:"-1"},[a("请求事件 "),e("a",{class:"header-anchor",href:"#请求事件","aria-label":'Permalink to "请求事件"'},"​")],-1);function m(p,P,k,x,N,T){const l=r("NolebasePageProperties"),o=r("VPNolebaseInlineLinkPreview");return d(),i("div",null,[h,t(l),u,e("ul",null,[e("li",null,[t(o,{href:"./message"},{default:n(()=>[a("消息事件")]),_:1})])]),b,e("ul",null,[e("li",null,[t(o,{href:"./notice"},{default:n(()=>[a("通知事件")]),_:1})])]),f,e("ul",null,[e("li",null,[t(o,{href:"./request"},{default:n(()=>[a("请求事件")]),_:1})])])])}const q=s(_,[["render",m]]);export{V as __pageData,q as default};
